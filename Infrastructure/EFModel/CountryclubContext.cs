// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Infrastructure.EFModel
{
    public partial class CountryclubContext : DbContext
    {
        public CountryclubContext()
        {
        }

        public CountryclubContext(DbContextOptions<CountryclubContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Clanarina> Clanarina { get; set; }
        public virtual DbSet<Mjesto> Mjesto { get; set; }
        public virtual DbSet<Osoba> Osoba { get; set; }
        public virtual DbSet<Racun> Racun { get; set; }
        public virtual DbSet<Rezervacija> Rezervacija { get; set; }
        public virtual DbSet<RezerviranaUsluga> RezerviranaUsluga { get; set; }
        public virtual DbSet<Uloga> Uloga { get; set; }
        public virtual DbSet<Usluga> Usluga { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Clanarina>(entity =>
            {
                entity.HasKey(e => e.IdClanarina);

                entity.Property(e => e.CijenaClanarina).HasColumnType("decimal(6, 2)");

                entity.Property(e => e.NazivClanarina)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<Mjesto>(entity =>
            {
                entity.HasKey(e => e.IdMjesto);

                entity.Property(e => e.NazivMjesto)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.Pbr)
                    .IsRequired()
                    .HasMaxLength(5);
            });

            modelBuilder.Entity<Osoba>(entity =>
            {
                entity.HasKey(e => e.IdOsoba);

                entity.Property(e => e.Adresa)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.DatumPrijave).HasColumnType("date");

                entity.Property(e => e.DatumRodenja).HasColumnType("date");

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.Ime)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.Property(e => e.Lozinka).IsRequired();

                entity.Property(e => e.Oib).HasMaxLength(11);

                entity.Property(e => e.Prezime)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Telefon).HasMaxLength(20);

                entity.Property(e => e.Username)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.HasOne(d => d.IdMjestoNavigation)
                    .WithMany(p => p.Osoba)
                    .HasForeignKey(d => d.IdMjesto)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Osoba_Mjesto");

                entity.HasOne(d => d.IdUlogaNavigation)
                    .WithMany(p => p.Osoba)
                    .HasForeignKey(d => d.IdUloga)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Osoba_Uloga");
            });

            modelBuilder.Entity<Racun>(entity =>
            {
                entity.HasKey(e => e.IdRacun);

                entity.Property(e => e.DatumRacuna).HasColumnType("date");

                entity.Property(e => e.Ukupno).HasColumnType("decimal(13, 2)");

                entity.HasOne(d => d.IdClanarinaNavigation)
                    .WithMany(p => p.Racun)
                    .HasForeignKey(d => d.IdClanarina)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Racun_Clanarina");

                entity.HasOne(d => d.IdOsobaNavigation)
                    .WithMany(p => p.Racun)
                    .HasForeignKey(d => d.IdOsoba)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Racun_Osoba");
            });

            modelBuilder.Entity<Rezervacija>(entity =>
            {
                entity.HasKey(e => e.IdRezervacija);

                entity.Property(e => e.CijenaRezervacije).HasColumnType("decimal(13, 2)");

                entity.Property(e => e.DatumKreiranja).HasColumnType("date");

                entity.HasOne(d => d.IdOsobaNavigation)
                    .WithMany(p => p.Rezervacija)
                    .HasForeignKey(d => d.IdOsoba)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Rezervacija_Osoba");

                entity.HasOne(d => d.IdRacunNavigation)
                    .WithMany(p => p.Rezervacija)
                    .HasForeignKey(d => d.IdRacun)
                    .OnDelete(DeleteBehavior.SetNull)
                    .HasConstraintName("FK_Rezervacija_Racun");
            });

            modelBuilder.Entity<RezerviranaUsluga>(entity =>
            {
                entity.HasKey(e => new { e.IdRezervacija, e.IdUsluga });

                entity.HasOne(d => d.IdRezervacijaNavigation)
                    .WithMany(p => p.RezerviranaUsluga)
                    .HasForeignKey(d => d.IdRezervacija)
                    .HasConstraintName("FK_RezerviranaUsluga_Rezervacija");

                entity.HasOne(d => d.IdUslugaNavigation)
                    .WithMany(p => p.RezerviranaUsluga)
                    .HasForeignKey(d => d.IdUsluga)
                    .HasConstraintName("FK_RezerviranaUsluga_Usluga");
            });

            modelBuilder.Entity<Uloga>(entity =>
            {
                entity.HasKey(e => e.IdUloga);

                entity.Property(e => e.NazivUloga)
                    .IsRequired()
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<Usluga>(entity =>
            {
                entity.HasKey(e => e.IdUsluga);

                entity.Property(e => e.CijenaPoSatu).HasColumnType("decimal(6, 2)");

                entity.Property(e => e.NazivUsluga)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}